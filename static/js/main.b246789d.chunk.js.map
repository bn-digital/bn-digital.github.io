{"version":3,"sources":["components/element/Element.tsx","components/element/ElementInfo.tsx","components/table/PeriodicTable.tsx","index.tsx"],"names":["Element","row","col","name","category","icon","number","symbol","onClick","style","gridRow","gridColumn","title","className","replaceAll","toLowerCase","dangerouslySetInnerHTML","__html","Get","svg","ElementInfo","melt","molarHeat","density","summary","atomicMass","appearance","source","onClose","id","PeriodicTable","elementData","setElementData","useState","undefined","data","map","item","render","document","getElementById"],"mappings":"kj9EAOA,MAAMA,EAA4B,EAAGC,MAAKC,MAAKC,OAAMC,WAAUC,OAAMC,SAAQC,SAAQC,aAEjF,0BACEC,MAAO,CAAEC,QAAST,EAAKU,WAAYT,GACnCM,QAASA,EACTI,MAAOT,EACPU,UAAY,mBAAkBP,KAAUF,EAASU,WAAW,IAAK,KAAKC,gBAJxE,UAME,qBAAKF,UAAU,SAAf,SACE,sBAAMA,UAAW,OAAQG,wBAAyB,CAAEC,OAAQZ,GAAQa,cAAIb,GAAMc,SAEhF,qBAAKN,UAAU,SAAf,SAAyBN,IACzB,qBAAKM,UAAU,eAAf,SAA+BV,O,MCPrC,MAAMiB,EAAoC,EACxChB,WACAiB,OACAhB,OACAiB,YACAf,SACAgB,UACApB,OACAqB,UACAC,aACAC,aACAC,SACAC,aAGE,qCACE,sBAAKC,GAAG,cAAchB,UAAY,GAAET,EAASU,WAAW,IAAK,KAAKC,gBAAlE,UACE,qBAAKF,UAAU,OAAOG,wBAAyB,CAAEC,OAAQZ,GAAQa,cAAIb,GAAMc,OAC3E,qBAAKN,UAAU,SAAf,SAAyBN,IACzB,qBAAKM,UAAU,eAAf,SAA+BV,OAEjC,sBAAK0B,GAAG,cAAR,UACE,qBAAKrB,QAASoB,EAASf,UAAU,eAAeD,MAAM,aAAtD,0BAGA,8BACGT,GACC,+BACGA,EACD,qBAAKU,UAAY,YAAWT,EAASU,WAAW,IAAK,KAAKC,gBAA1D,SAA4EX,e,iBCrB3E0B,MAhBW,KACxB,MAAOC,EAAaC,GAAkBC,qBAEtC,OACE,uBAAMpB,UAAU,UAAhB,UACE,kFACA,0BAASgB,GAAG,QAAZ,UACGE,GAAe,cAAC,EAAD,IAAiBA,EAAaH,QAAS,IAAMI,OAAeE,KAC3EC,EAAKC,KAAKC,GACT,cAAC,EAAD,CAAS7B,QAAS,IAAMwB,EAAeK,MAAWA,a,MCV5DC,iBAAO,cAAC,EAAD,IAAmBC,SAASC,eAAe,W","file":"static/js/main.b246789d.chunk.js","sourcesContent":["import React, { FC, MouseEventHandler, ReactElement } from \"react\"\r\nimport { ElementData } from \".\"\r\nimport \"./Element.scss\"\r\nimport { Get } from \"simple-icons\"\r\n\r\ntype ElementProps = Pick<ElementData, \"col\" | \"row\" | \"name\" | \"icon\" | \"category\" | \"number\" | \"symbol\"> & { onClick: MouseEventHandler }\r\n\r\nconst Element: FC<ElementProps> = ({ row, col, name, category, icon, number, symbol, onClick }) => {\r\n  return (\r\n    <section\r\n      style={{ gridRow: row, gridColumn: col }}\r\n      onClick={onClick}\r\n      title={name}\r\n      className={`element element-${number} ${category.replaceAll(\" \", \"-\").toLowerCase()}`}\r\n    >\r\n      <div className='number'>\r\n        <span className={\"icon\"} dangerouslySetInnerHTML={{ __html: icon && Get(icon).svg }} />\r\n      </div>\r\n      <div className='symbol'>{symbol}</div>\r\n      <div className='element-name'>{name}</div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport { Element }\r\n","import React, { FC, MouseEventHandler } from \"react\"\nimport { ElementData } from \".\"\nimport \"./ElementInfo.scss\"\nimport { Get } from \"simple-icons\"\n\ntype ElementInfoProps = Pick<\n  ElementData,\n  \"density\" | \"molarHeat\" | \"melt\" | \"source\" | \"atomicMass\" | \"summary\" | \"category\" | \"icon\" | \"symbol\" | \"name\" | \"appearance\"\n> & {\n  onClose: MouseEventHandler\n}\n\nconst ElementInfo: FC<ElementInfoProps> = ({\n  category,\n  melt,\n  icon,\n  molarHeat,\n  symbol,\n  density,\n  name,\n  summary,\n  atomicMass,\n  appearance,\n  source,\n  onClose,\n}) => {\n  return (\n    <>\n      <div id='element-box' className={`${category.replaceAll(\" \", \"-\").toLowerCase()}`}>\n        <div className='icon' dangerouslySetInnerHTML={{ __html: icon && Get(icon).svg }} />\n        <div className='symbol'>{symbol}</div>\n        <div className='element-name'>{name}</div>\n      </div>\n      <div id='information'>\n        <div onClick={onClose} className='close-button' title='Close Info'>\n          Close [&times;]\n        </div>\n        <div>\n          {name && (\n            <h1>\n              {name}\n              <sup className={`category ${category.replaceAll(\" \", \"-\").toLowerCase()}`}>{category}</sup>\n            </h1>\n          )}\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport { ElementInfo }\n","import { FC, useState } from \"react\"\r\nimport { data, Element, ElementInfo, ElementData } from \"../element\"\r\nimport \"./PeriodicTable.scss\"\r\n\r\nconst PeriodicTable: FC = () => {\r\n  const [elementData, setElementData] = useState<ElementData>()\r\n\r\n  return (\r\n    <main className='wrapper'>\r\n      <h1>BN Digital Periodic Table of Technology Elements</h1>\r\n      <article id='table'>\r\n        {elementData && <ElementInfo {...elementData} onClose={() => setElementData(undefined)} />}\r\n        {data.map((item) => (\r\n          <Element onClick={() => setElementData(item)} {...item} />\r\n        ))}\r\n      </article>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default PeriodicTable\r\n","import { render } from \"react-dom\"\r\nimport PeriodicTable from \"./components/table/PeriodicTable\"\r\nimport './index.scss'\r\nrender(<PeriodicTable />, document.getElementById(\"root\"))\r\n"],"sourceRoot":""}